import React, { useState, useEffect, useRef, useCallback } from 'react';
import { Plus, Trash2, RotateCcw, Menu, X, Settings, Download } from 'lucide-react';

/* === NOWE IMPORTY FIREBASE (Zakładamy, że masz już utworzony plik src/firebaseConfig.ts) ===
import { db } from './firebaseConfig'; 
import { 
    doc, 
    onSnapshot, 
    setDoc, 
    serverTimestamp, 
    Unsubscribe 
} from 'firebase/firestore'; 

// ID dokumentu w kolekcji Firestore, który będzie przechowywał Twoją mapę
const MAP_DOCUMENT_ID = "mapaGłówna"; 
// =========================================================================================


// === DEFINICJE TYPÓW DLA TYPESCRIPT ===
*/interface Alliance {
  id: number;
  name: string;
  color: string;
}
interface RegionCenter {
  x: number;
  y: number;
}

interface RegionData {
  id: string;
  number: number;
  d: string;
  x?: number; // Opcjonalne w tablicy REGION_DATA
  y?: number; // Opcjonalne w tablicy REGION_DATA
}
/*
// === NOWY INTERFEJS DANYCH MAPY ZAPISYWANYCH W FIRESTORE ===
interface MapData {
    alliances: Alliance[];
    regionColors: Record<string, number>;
    manualCenterOverrides: Record<string, RegionCenter>;
    activeAllianceId: number; 
    updatedAt?: object; // Używane dla serverTimestamp
}
// =========================================================
*/

// --- KONFIGURACJA DEWELOPERSKA ---
const DEBUG_MODE_ENABLED = false;

// --- KROK 1: Centralna Tablica Danych Regionów ---
// Użycie typu RegionData[]
const REGION_DATA: RegionData[] = [
  // Dodano ręczne X/Y dla regionów 1, 4, 11 i 14, które były problematyczne
  { id: 'r1', number: 1, d: "M 1105.00 29.00 C 1091.43 29.67 1077.84 30.39 1064.00 30.00 C 1052.45 31.65 1037.57 28.78 1027.08 33.08 C 1023.20 42.96 1021.96 54.06 1011.25 59.25 C 998.44 63.55 1003.64 80.74 1003.00 90.00 C 978.67 90.00 954.33 90.00 930.00 90.00 C 929.69 74.56 931.08 58.67 928.07 43.93 C 917.89 34.01 917.79 22.14 921.00 9.00 C 983.29 9.25 1034.59 8.45 1092.00 8.00 C 1107.86 2.96 1105.45 18.36 1105.00 29.00", x: 976, y: 44 },
  { id: 'r2', number: 1, d: "M 709.00 10.00 C 711.10 7.92 715.15 9.50 718.00 9.00 C 728.75 10.01 740.77 8.48 753.00 9.00 C 754.28 19.65 767.15 25.30 768.00 36.00 C 768.17 50.03 769.63 63.76 769.00 78.00 C 775.99 80.97 782.66 85.63 790.00 88.00 C 786.12 95.39 774.51 101.00 779.78 111.22 C 780.63 122.79 778.98 134.79 781.00 146.00 C 763.33 146.00 745.67 146.00 728.00 146.00 C 726.30 132.89 731.48 117.14 725.25 105.75 C 710.04 92.18 695.70 77.23 680.75 63.25 C 672.54 57.26 666.60 45.36 656.00 45.00 C 641.33 45.00 626.67 45.00 612.00 45.00 C 612.42 33.15 610.23 21.95 611.00 10.00 C 643.67 10.00 676.33 10.00 709.00 10.00", x: 726, y: 66 },
  { id: 'r3', number: 1, d: "M 918.00 9.00 C 918.69 15.68 916.00 21.47 916.00 28.00 C 902.96 31.76 888.88 31.51 875.00 32.00 C 871.12 42.74 874.42 57.57 860.75 63.75 C 843.59 85.35 805.39 58.71 792.00 87.00 C 785.65 83.08 778.94 79.58 772.00 77.00 C 770.16 63.72 771.32 49.66 771.00 36.00 C 770.68 25.18 757.59 19.47 756.00 9.00 C 810.00 9.00 864.00 9.00 918.00 9.00", y: 53, x: 844 },
  { id: 'r4', number: 2, d: "M 489.00 110.00 C 481.00 116.12 475.54 124.44 468.25 131.25 C 456.96 138.20 441.92 131.07 429.00 133.00 C 419.99 129.15 412.83 120.59 405.25 113.75 C 391.96 112.01 377.67 113.49 364.00 113.00 C 351.91 111.67 336.50 117.59 328.75 105.25 C 319.85 96.90 339.97 92.08 344.25 85.25 C 352.84 78.12 361.53 71.62 373.00 71.00 C 373.67 50.74 372.05 31.08 372.00 11.00 C 398.61 10.21 424.89 9.76 453.00 10.00 C 465.89 6.39 471.20 21.06 479.70 27.30 C 486.57 35.52 487.06 54.00 478.75 61.75 C 474.89 69.55 457.01 77.79 469.25 85.75 C 475.26 94.15 484.41 100.91 489.00 110.00", y: 70, x: 418 },
  { id: 'r5', number: 1, d: "M 608.00 10.00 C 605.77 23.47 615.36 41.18 603.25 51.25 C 594.20 60.23 582.91 68.10 585.02 82.02 C 583.15 93.45 568.04 98.04 562.00 108.00 C 542.95 105.98 522.04 107.46 502.00 107.00 C 484.78 109.43 478.12 88.60 467.00 79.00 C 474.81 68.46 490.71 60.45 487.00 45.00 C 491.57 28.58 475.02 21.61 467.00 10.00 C 514.00 10.00 561.00 10.00 608.00 10.00", y: 60, x: 547 },
  { id: 'r6', number: 1, d: "M 264.00 11.00 C 264.48 17.20 262.25 22.72 263.00 29.00 C 247.05 28.65 230.53 26.10 214.78 27.78 C 206.55 36.24 194.33 43.13 189.01 53.01 C 188.99 70.34 189.01 87.67 189.00 105.00 C 179.90 111.00 171.31 118.56 162.75 125.75 C 151.14 122.36 142.72 109.26 129.00 112.00 C 113.29 112.12 97.91 113.65 82.00 113.00 C 82.16 100.31 82.03 87.26 84.26 75.26 C 91.43 67.87 103.12 63.17 101.00 51.00 C 101.25 37.90 103.51 25.30 103.00 12.00 C 156.22 9.89 210.38 11.50 264.00 11.00", y: 62, x: 155 },
  { id: 'r7', number: 1, d: "M 369.00 11.00 C 370.47 29.46 369.53 48.53 371.00 67.00 C 357.89 71.00 345.93 79.42 335.25 89.25 C 324.13 102.56 304.73 99.38 289.75 98.20 C 273.02 96.72 253.58 102.83 241.75 88.25 C 228.68 76.03 208.77 81.97 192.00 80.00 C 192.22 70.47 191.56 60.73 192.33 51.33 C 204.51 43.34 212.81 25.65 230.00 30.00 C 239.58 30.61 249.15 31.43 259.00 31.00 C 270.95 35.21 263.81 17.39 267.00 11.00 C 301.00 11.00 335.00 11.00 369.00 11.00", y: 55, x: 297 },
  { id: 'r8', number: 1, d: "M 15.00 111.00 C 15.59 108.16 13.78 104.02 16.00 102.00 C 16.27 71.98 15.23 41.64 17.00 12.00 C 45.00 12.00 73.00 12.00 101.00 12.00 C 99.84 24.62 99.52 37.47 98.01 50.01 C 101.44 62.58 87.87 66.67 81.25 74.25 C 78.14 86.50 81.26 100.83 79.67 113.67 C 71.13 118.57 64.71 129.60 54.00 129.00 C 41.29 129.80 28.26 129.47 16.00 132.00 C 13.77 125.49 15.59 117.92 15.00 111.00", y: 72, x: 57 },
  { id: 'r9', number: 2, d: "M 917.00 31.00 C 921.66 40.56 930.11 48.79 927.00 61.00 C 924.66 72.04 932.52 88.53 921.30 95.30 C 907.69 108.49 893.73 121.18 879.92 133.92 C 875.00 144.68 878.11 158.95 876.00 171.00 C 862.67 171.00 849.33 171.00 836.00 171.00 C 824.37 168.92 808.85 176.15 800.75 165.25 C 794.82 157.94 785.22 151.94 783.00 143.00 C 783.76 129.39 781.49 116.55 782.00 103.00 C 786.71 95.18 794.12 88.55 800.75 81.75 C 807.31 69.88 824.48 79.53 835.02 75.02 C 846.81 76.61 857.50 74.86 864.25 64.25 C 875.98 58.58 875.38 46.14 876.00 35.00 C 889.75 34.01 903.84 34.42 917.00 31.00", y: 107, x: 861 },
  { id: 'r10', number: 1, d: "M 1105.00 32.00 C 1105.00 60.67 1105.00 89.33 1105.00 118.00 C 1082.85 116.75 1059.00 120.52 1037.92 116.08 C 1031.48 110.77 1024.94 105.89 1018.75 100.25 C 1011.97 95.06 1001.95 90.46 1005.00 80.00 C 1004.23 69.76 1008.12 61.86 1017.75 57.75 C 1025.67 52.78 1025.94 42.05 1029.00 34.00 C 1054.22 32.87 1079.67 32.67 1105.00 32.00", x: 1061, y: 75 },
  { id: 'r11', number: 2, d: "M 465.00 137.00 C 451.15 137.99 433.92 131.25 422.25 140.25 C 415.20 148.95 404.42 154.47 399.00 164.00 C 399.20 177.40 398.66 190.56 387.25 199.25 C 378.22 208.13 368.25 216.93 372.00 231.00 C 369.21 245.67 379.27 257.40 394.00 257.00 C 409.48 256.74 424.82 257.09 440.00 258.00 C 454.35 255.56 470.67 263.11 483.25 256.25 C 491.96 249.41 499.62 240.45 509.00 235.00 C 508.98 221.84 507.90 208.93 507.00 196.00 C 493.75 194.22 481.13 190.12 468.00 188.00 C 467.64 170.83 465.31 154.17 465.00 137.00", x: 442, y: 195 },
  { id: 'r12', number: 2, d: "M 803.00 173.00 C 794.95 164.84 787.98 149.09 775.00 149.00 C 758.72 149.39 741.79 148.49 726.75 148.75 C 718.25 157.57 709.03 165.82 701.00 175.00 C 709.30 182.13 716.77 190.60 724.75 198.25 C 732.06 210.43 726.03 227.77 728.00 242.00 C 730.14 252.23 743.08 258.78 750.25 266.75 C 761.76 273.89 778.27 268.57 791.00 269.00 C 806.58 268.84 822.20 269.33 837.75 268.75 C 848.60 260.51 855.37 250.19 851.93 236.07 C 844.76 215.07 872.64 228.55 882.92 223.92 C 892.38 218.48 900.31 209.85 910.00 205.00 C 910.58 194.70 909.15 183.53 910.00 174.00 C 875.02 173.14 839.59 172.72 803.00 173.00", x: 795, y: 214 },
  { id: 'r13', number: 2, d: "M 566.00 141.00 C 576.76 147.87 586.17 157.78 596.75 165.25 C 607.65 179.31 627.59 170.60 643.00 173.00 C 660.99 172.98 678.98 173.04 696.97 172.97 C 707.23 166.29 715.34 155.17 724.74 146.74 C 725.17 132.68 731.82 112.00 717.75 102.25 C 698.91 85.28 681.26 66.44 662.25 49.75 C 646.49 45.06 627.39 50.43 611.00 47.00 C 604.29 57.48 588.36 63.64 588.00 77.00 C 590.63 91.57 573.79 98.62 565.00 107.00 C 564.23 118.61 566.33 129.51 566.00 141.00", y: 120, x: 647 },
  { id: 'r14', number: 2, d: "M 268.00 197.00 C 262.25 190.14 250.97 184.82 250.00 176.00 C 250.50 150.66 252.29 125.60 251.92 100.08 C 245.42 93.92 237.40 87.16 229.00 84.00 C 216.85 82.90 204.46 82.84 192.00 83.00 C 190.88 93.02 196.26 107.00 184.25 111.25 C 177.71 116.79 171.21 122.85 164.00 127.00 C 163.24 138.94 165.54 150.12 165.00 162.00 C 168.69 170.21 159.66 190.16 174.00 188.00 C 192.38 187.37 202.71 206.89 217.33 215.67 C 228.35 216.72 239.60 215.45 250.25 214.25 C 256.27 208.98 263.81 203.41 268.00 197.00", x: 216, y: 160},
  { id: 'r15', number: 2, d: "M 1039.00 120.00 C 1030.51 113.53 1022.18 106.78 1013.75 100.25 C 1005.14 88.50 989.61 94.36 977.00 93.00 C 962.33 93.00 947.67 93.00 933.00 93.00 C 922.24 93.85 916.39 106.05 907.75 111.75 C 900.50 119.39 892.53 125.68 885.08 133.08 C 875.11 141.67 881.59 158.81 879.00 171.00 C 889.72 171.86 901.81 169.26 911.67 172.33 C 911.67 183.01 913.10 193.31 913.00 204.00 C 927.33 204.00 941.67 204.00 956.00 204.00 C 967.66 205.51 973.60 192.74 982.75 187.75 C 990.51 177.74 1003.92 179.95 1015.00 178.00 C 1014.91 164.85 1017.02 152.37 1017.23 139.23 C 1023.65 132.50 1032.11 126.58 1039.00 120.00" },
  { id: 'r16', number: 1, d: "M 353.00 116.00 C 350.16 115.41 346.02 117.22 344.00 115.00 C 333.58 117.97 329.25 106.89 322.00 102.00 C 299.61 101.53 277.10 101.58 255.00 100.00 C 254.46 114.76 254.16 129.56 253.40 144.25 C 254.80 156.20 248.34 173.79 257.25 183.75 C 265.32 190.89 273.13 198.39 280.75 206.25 C 290.31 217.71 307.84 209.55 321.00 212.00 C 335.57 214.05 351.03 212.54 366.00 213.00 C 377.15 211.71 382.39 198.22 390.25 191.25 C 402.74 183.10 389.14 164.35 401.25 156.25 C 408.73 149.00 418.17 142.11 424.00 134.00 C 414.49 128.42 408.20 115.06 396.00 116.00 C 381.80 116.09 366.50 115.87 353.00 116.00", x: 327, y: 162},
  { id: 'r17', number: 1, d: "M 562.00 110.00 C 541.67 110.00 521.33 110.00 501.00 110.00 C 485.01 108.08 478.84 128.10 467.00 136.00 C 469.34 152.42 468.88 169.54 471.00 186.00 C 479.47 187.18 487.46 189.94 495.93 191.07 C 504.65 192.29 513.53 194.63 510.00 206.00 C 511.47 214.80 510.76 224.15 512.00 233.00 C 525.95 233.89 540.24 233.39 554.00 235.00 C 566.50 235.83 579.20 236.28 586.77 224.77 C 597.28 218.14 604.10 208.96 602.00 196.00 C 603.93 184.10 606.06 171.91 593.08 165.92 C 584.85 159.68 577.21 152.19 568.75 146.25 C 557.75 138.46 565.11 121.78 562.00 110.00"},
  { id: 'r18', number: 1, d: "M 161.00 128.00 C 149.91 124.52 142.10 112.23 129.00 115.00 C 114.11 114.42 99.67 115.72 85.00 116.00 C 73.54 116.62 67.82 131.66 56.00 132.00 C 42.13 132.19 28.14 131.98 15.00 135.00 C 15.03 167.14 14.98 201.14 15.00 234.00 C 31.26 231.60 51.74 240.18 63.75 226.75 C 74.51 216.94 86.76 206.62 82.00 191.00 C 109.26 189.34 136.63 188.16 164.00 187.00 C 162.20 167.57 162.43 147.55 161.00 128.00", y: 168, x: 70},
  { id: 'r19', number: 1, d: "M 1106.00 243.00 C 1105.35 205.42 1107.32 167.17 1105.00 130.00 C 1109.31 114.31 1087.17 123.38 1078.00 121.00 C 1065.66 121.49 1052.71 120.01 1040.75 121.75 C 1034.11 127.89 1027.50 134.53 1020.00 139.00 C 1018.93 152.77 1018.92 166.96 1016.22 180.22 C 1004.41 182.57 990.69 180.79 982.25 191.25 C 974.75 199.82 959.84 203.89 964.00 218.00 C 973.87 222.05 978.46 238.07 991.00 236.00 C 1005.67 236.00 1020.33 236.00 1035.00 236.00 C 1035.65 246.01 1036.12 256.06 1037.00 266.00 C 1051.53 265.77 1065.66 264.03 1079.97 262.97 C 1089.41 258.06 1096.29 247.57 1106.00 243.00", x: 1064, y: 190},
  { id: 'r20', number: 3, d: "M 725.00 245.00 C 723.27 230.24 728.52 212.75 722.25 199.75 C 714.51 191.55 705.55 184.02 698.67 175.33 C 667.66 174.49 637.61 176.91 606.00 176.00 C 605.34 189.09 604.32 202.09 603.00 215.00 C 592.53 224.95 572.64 233.12 577.00 251.00 C 576.81 266.94 595.57 272.85 604.30 284.70 C 616.45 300.66 637.91 291.71 655.00 293.00 C 656.80 281.14 658.34 269.35 659.22 257.22 C 658.95 242.80 678.47 250.16 688.00 247.00 C 700.39 246.54 712.72 245.85 725.00 245.00"},
  { id: 'r21', number: 1, d: "M 215.00 219.00 C 207.51 208.97 195.21 201.94 185.75 193.25 C 170.54 187.26 151.53 190.70 135.00 191.00 C 118.29 191.57 101.04 192.68 85.00 193.00 C 89.77 214.25 67.96 223.60 56.00 237.00 C 59.50 246.53 54.06 259.61 61.75 267.25 C 73.21 279.75 86.73 289.60 98.00 302.00 C 111.26 294.19 122.50 279.98 139.98 282.98 C 158.17 280.75 176.57 279.26 195.00 278.00 C 194.84 264.87 196.71 252.29 196.02 239.02 C 198.33 230.19 208.24 224.79 215.00 219.00", y: 238, x: 133},
  { id: 'r22', number: 1, d: "M 198.00 265.00 C 200.19 268.09 198.43 273.16 199.00 277.00 C 199.72 276.72 202.96 277.14 201.00 278.00 C 219.96 281.60 240.13 284.52 260.00 286.00 C 266.85 283.08 274.03 286.18 281.07 284.07 C 292.29 277.03 300.27 263.37 313.00 260.00 C 320.79 260.95 332.93 258.27 338.00 261.00 C 349.74 262.74 359.85 260.51 367.25 251.25 C 374.13 241.23 366.76 227.67 369.00 216.00 C 343.75 216.67 319.26 214.30 294.00 215.00 C 291.16 214.41 287.02 216.22 285.00 214.00 C 279.56 210.03 275.48 204.02 270.00 200.00 C 261.31 206.41 254.76 220.43 242.00 218.00 C 229.42 219.29 214.85 216.22 207.25 229.25 C 193.72 236.03 200.76 252.96 198.00 265.00", y: 245, x: 277},
  { id: 'r23', number: 1, d: "M 961.00 207.00 C 946.67 207.00 932.33 207.00 918.00 207.00 C 907.15 204.89 900.22 216.61 891.25 221.25 C 882.13 231.82 866.39 225.13 854.00 227.00 C 853.68 237.50 854.59 245.63 855.00 255.00 C 873.56 268.42 888.01 289.35 907.00 301.00 C 921.20 299.40 936.80 300.19 952.00 300.00 C 966.11 302.98 975.35 290.82 984.31 283.31 C 997.49 279.05 1014.80 287.20 1024.75 274.75 C 1040.05 268.22 1031.51 251.69 1033.00 239.00 C 1015.52 238.91 999.88 237.76 982.25 237.75 C 973.51 228.86 958.34 221.07 961.00 207.00", y: 260, x: 937},
  { id: 'r24', number: 4, d: "M 574.00 238.00 C 557.64 237.44 541.18 237.25 525.00 236.00 C 510.29 232.26 501.32 243.88 491.75 252.75 C 474.86 258.89 490.80 281.04 476.25 288.25 C 462.20 295.39 460.65 309.34 462.00 324.00 C 476.42 324.65 490.53 326.45 504.97 327.03 C 513.03 332.83 519.50 342.56 527.08 349.92 C 537.79 357.70 554.05 349.30 567.00 351.00 C 567.40 344.52 567.02 337.75 570.00 332.00 C 583.73 332.35 599.44 331.75 614.00 332.00 C 611.39 319.26 619.75 300.88 608.75 292.25 C 601.07 284.83 593.28 277.59 585.25 270.75 C 572.67 263.78 574.50 250.56 574.00 238.00"},
  { id: 'r25', number: 1, d: "M 54.00 237.00 C 41.00 237.00 28.00 237.00 15.00 237.00 C 15.02 287.66 14.96 338.32 15.03 388.97 C 21.04 398.56 31.50 406.00 39.25 414.75 C 48.31 428.59 66.31 421.16 80.00 424.00 C 79.84 410.42 80.32 396.80 79.75 383.25 C 73.38 376.32 64.56 371.41 60.00 363.00 C 66.73 358.34 72.77 352.59 78.75 346.75 C 82.55 335.64 100.81 344.09 98.00 331.00 C 96.01 321.43 102.48 307.41 93.75 301.25 C 82.04 289.44 69.23 279.41 57.75 267.25 C 52.78 258.50 55.33 246.99 54.00 237.00 M 42.00 309.00", y: 323, x: 42},
  { id: 'r26', number: 1, d: "M 1106.00 246.00 C 1096.42 251.65 1089.91 261.54 1080.00 266.00 C 1065.88 266.53 1052.03 268.08 1038.03 269.03 C 1029.25 275.09 1014.11 280.61 1017.01 293.99 C 1019.58 307.84 1016.45 323.14 1019.00 337.00 C 1026.55 337.22 1033.48 339.79 1041.00 340.00 C 1041.00 348.67 1041.00 357.33 1041.00 366.00 C 1057.26 384.42 1083.23 376.39 1106.00 378.00 C 1106.00 334.00 1106.00 290.00 1106.00 246.00"},
  { id: 'r27', number: 5, d: "M 753.00 272.00 C 740.34 266.17 733.52 246.70 718.00 248.00 C 699.71 249.19 681.39 250.23 663.00 251.00 C 661.59 260.20 660.54 269.37 659.78 278.78 C 658.40 287.75 659.61 300.37 646.00 296.00 C 636.15 295.57 626.58 296.39 617.00 297.00 C 617.00 308.67 617.00 320.33 617.00 332.00 C 632.52 331.39 647.38 333.00 662.75 333.25 C 671.52 340.17 678.05 353.33 690.00 353.00 C 721.33 353.00 752.67 353.00 784.00 353.00 C 780.95 337.85 790.23 315.07 774.25 306.75 C 762.79 297.37 747.42 290.08 753.00 272.00"},
  { id: 'r28', number: 3, d: "M 373.00 250.00 C 368.27 254.18 362.77 257.68 359.00 263.00 C 365.76 270.60 377.37 276.28 377.00 287.00 C 375.78 299.07 379.35 308.68 389.75 315.25 C 397.73 325.37 407.55 326.84 420.00 325.00 C 433.19 324.91 446.37 324.26 459.22 323.22 C 461.85 311.94 455.36 296.80 468.92 290.92 C 480.69 285.28 481.02 273.64 481.00 262.00 C 462.06 259.78 442.01 261.92 423.00 260.00 C 406.17 257.77 384.82 264.70 373.00 250.00"},
  { id: 'r29', number: 3, d: "M 855.00 257.00 C 846.19 260.29 842.33 274.83 831.00 272.00 C 806.06 272.55 780.53 270.83 756.00 273.00 C 751.79 287.43 762.16 294.64 772.30 301.70 C 799.74 312.52 772.44 352.11 799.92 364.08 C 809.61 373.73 825.20 368.71 838.00 370.00 C 850.81 372.41 863.21 371.51 871.75 360.75 C 886.36 354.92 881.27 338.78 882.00 326.00 C 881.13 314.04 897.24 310.79 901.00 301.00 C 885.26 287.06 869.85 271.98 855.00 257.00"},
  { id: 'r30', number: 3, d: "M 400.00 327.00 C 391.29 320.35 382.76 312.78 375.00 305.00 C 375.81 291.82 375.51 278.48 363.25 270.75 C 354.08 258.10 336.32 266.35 323.00 264.00 C 309.51 260.55 301.86 272.34 292.75 279.75 C 283.90 291.61 269.39 289.09 256.00 289.00 C 255.24 308.94 257.55 328.12 257.00 348.00 C 268.45 348.33 280.50 346.92 291.25 349.75 C 298.31 354.57 304.23 361.65 312.00 365.00 C 324.34 354.31 335.77 337.67 354.78 343.22 C 372.79 347.29 389.75 341.82 400.00 327.00"},
  { id: 'r31', number: 2, d: "M 254.00 326.00 C 254.37 313.84 253.72 301.97 252.92 290.08 C 244.39 285.20 231.63 287.17 221.67 284.33 C 189.21 277.33 155.39 284.15 122.75 287.75 C 115.75 293.21 108.48 298.64 101.00 303.00 C 100.42 314.93 102.22 327.48 100.00 339.00 C 114.02 339.95 128.68 339.85 138.25 351.75 C 147.36 359.69 156.89 366.92 165.77 375.23 C 172.94 387.00 193.66 377.01 192.00 365.00 C 187.93 349.49 197.13 338.81 209.25 331.25 C 220.45 320.21 239.47 328.64 254.00 326.00"},
  { id: 'r32', number: 2, d: "M 1030.00 366.00 C 1031.77 363.97 1035.48 365.47 1038.00 365.00 C 1038.00 357.33 1038.00 349.67 1038.00 342.00 C 1030.49 341.65 1023.39 339.71 1016.00 339.00 C 1015.83 320.95 1014.37 303.25 1015.00 285.00 C 1002.32 286.24 986.93 280.68 978.25 292.25 C 970.15 302.91 957.82 302.31 945.67 302.67 C 931.60 303.44 917.20 302.78 903.00 303.00 C 898.83 309.39 891.34 315.53 885.00 320.00 C 884.96 331.40 885.42 342.95 884.00 354.00 C 893.83 362.27 905.16 367.39 919.00 365.00 C 931.66 365.00 944.31 365.09 951.75 377.25 C 960.64 389.12 977.96 379.40 990.00 384.00 C 994.03 378.61 999.84 374.41 1004.08 369.08 C 1009.83 362.43 1021.77 367.67 1030.00 366.00"},
  { id: 'r33', number: 5, d: "M 312.00 384.00 C 314.03 385.77 312.53 389.48 313.00 392.00 C 312.62 395.30 313.90 399.10 312.00 402.00 C 329.01 402.04 347.18 404.93 363.77 401.77 C 374.98 392.52 385.64 381.77 402.00 386.00 C 403.60 382.36 408.24 384.43 411.00 385.00 C 429.97 391.98 435.67 365.63 453.99 370.99 C 470.89 367.13 487.16 373.56 503.00 377.00 C 510.73 369.04 520.43 362.32 528.00 354.00 C 517.85 347.47 512.75 332.65 501.22 329.78 C 469.79 325.15 438.31 327.39 406.01 328.01 C 395.15 332.43 388.23 349.03 374.00 347.00 C 359.66 348.56 341.17 339.97 330.25 352.25 C 318.97 360.21 309.87 369.27 312.00 384.00"},
  { id: 'r34', number: 3, d: "M 254.00 329.00 C 241.36 329.05 228.72 328.89 216.08 329.08 C 208.63 333.88 202.59 341.63 195.00 346.00 C 193.75 355.71 197.54 367.81 193.02 376.02 C 187.29 379.02 173.97 381.37 177.00 390.00 C 176.65 400.50 177.25 410.79 178.00 421.00 C 199.08 423.41 223.56 416.28 239.00 434.00 C 243.80 428.16 249.30 418.47 257.00 417.00 C 267.99 416.83 279.88 417.38 290.30 416.64 C 297.37 414.12 302.74 405.88 310.00 403.00 C 310.00 391.00 310.00 379.00 310.00 367.00 C 303.40 363.61 297.64 358.09 291.70 353.30 C 283.47 348.45 272.44 352.16 263.00 351.00 C 248.85 354.54 255.44 337.07 254.00 329.00"},
  { id: 'r36', number: 6, d: "M 726.00 443.00 C 717.84 436.21 709.96 428.94 701.75 422.25 C 695.31 413.77 680.17 409.97 683.00 397.00 C 681.95 383.04 682.54 368.58 681.25 354.75 C 673.22 348.20 666.71 338.13 657.00 335.00 C 627.93 334.66 599.98 334.08 571.00 335.00 C 570.76 341.12 569.23 346.90 569.00 353.00 C 556.11 355.00 542.58 354.83 529.75 356.75 C 522.06 363.39 514.56 370.32 506.75 376.75 C 500.48 387.34 505.99 402.16 506.00 414.00 C 532.43 411.59 561.81 414.21 589.00 412.00 C 588.35 424.58 590.31 437.83 588.00 450.00 C 605.23 453.60 626.21 446.10 641.25 455.75 C 652.76 471.40 673.03 464.65 690.00 466.00 C 706.91 470.27 715.23 452.57 726.00 443.00", x: 625, y: 388},
  { id: 'r37', number: 1, d: "M 175.00 421.00 C 172.61 406.04 180.07 386.14 164.75 377.25 C 154.95 369.45 145.43 361.20 135.75 353.25 C 125.70 340.75 109.28 343.11 95.02 341.02 C 81.65 341.70 75.34 357.64 64.00 363.00 C 67.48 372.43 81.44 376.13 83.00 386.00 C 82.45 398.50 84.17 412.49 82.00 424.00 C 90.94 431.33 100.49 437.53 110.00 444.00 C 118.54 438.06 126.16 430.60 134.75 424.75 C 146.40 419.18 161.64 422.02 175.00 421.00"},
  { id: 'r38', number: 4, d: "M 756.00 356.00 C 732.33 356.00 708.67 356.00 685.00 356.00 C 688.07 373.16 678.34 395.78 690.92 409.08 C 701.22 418.03 711.61 426.94 721.92 436.08 C 735.33 448.42 757.30 438.62 774.00 443.00 C 792.95 443.54 812.46 441.84 831.00 444.00 C 846.39 444.89 854.29 427.45 866.75 420.75 C 881.64 413.07 880.45 391.76 866.92 383.08 C 857.20 365.88 834.60 376.45 819.00 372.00 C 800.76 378.10 794.35 354.12 778.00 355.00 C 771.66 357.33 763.16 355.34 756.00 356.00", x: 772, y: 393},
  { id: 'r39', number: 3, d: "M 989.00 386.00 C 976.31 384.65 961.64 389.28 951.75 381.25 C 937.56 355.74 903.23 378.57 886.70 358.30 C 877.07 352.86 870.47 369.59 861.00 372.00 C 866.07 381.01 878.77 386.49 880.00 397.00 C 884.57 421.99 853.99 428.86 842.00 446.00 C 849.43 449.80 854.01 463.48 863.00 461.00 C 874.17 459.58 886.89 461.43 896.75 456.75 C 902.90 450.01 910.15 445.06 916.26 438.26 C 939.85 435.39 964.84 436.27 989.00 435.00 C 989.00 418.67 989.00 402.33 989.00 386.00"},
  { id: 'r40', number: 1, d: "M 1106.00 381.00 C 1093.74 381.68 1082.25 379.32 1070.00 380.00 C 1059.17 381.99 1050.38 378.40 1043.25 370.75 C 1033.86 364.66 1020.18 369.53 1009.08 368.08 C 1002.41 373.04 998.13 381.09 991.00 386.00 C 992.26 403.60 989.40 424.44 992.00 443.00 C 990.27 460.26 1010.47 464.96 1020.77 475.23 C 1037.08 482.10 1060.69 468.92 1073.25 484.75 C 1084.18 494.17 1094.84 503.86 1106.00 513.00 C 1106.00 469.00 1106.00 425.00 1106.00 381.00"},
  { id: 'r41', number: 6, d: "M 476.00 488.00 C 474.57 486.97 474.31 482.96 476.00 482.00 C 474.20 460.40 475.21 438.06 475.08 416.08 C 481.61 409.57 497.85 418.98 502.99 411.01 C 500.52 401.09 503.43 389.67 501.22 379.78 C 483.91 373.44 463.25 371.08 445.00 374.00 C 437.08 374.92 432.88 384.22 426.00 388.00 C 406.90 389.30 384.46 382.32 371.25 399.25 C 360.57 404.19 365.97 414.54 365.00 424.00 C 376.41 432.91 390.88 434.19 405.00 436.00 C 407.24 460.25 407.71 485.03 404.08 508.92 C 409.75 516.07 418.10 520.93 424.75 527.25 C 430.07 536.90 424.92 550.89 428.00 561.00 C 444.51 560.98 460.90 561.44 477.00 563.00 C 492.26 567.46 499.35 552.30 509.75 544.75 C 518.37 530.24 535.45 536.40 549.00 537.00 C 549.49 526.69 550.48 516.55 550.00 506.00 C 525.39 506.55 500.20 504.83 476.00 507.00 C 474.41 500.86 476.39 493.90 476.00 488.00", x: 445, y: 478},
  { id: 'r42', number: 1, d: "M 86.00 525.00 C 87.64 511.17 84.68 495.66 98.75 487.75 C 112.65 480.20 106.39 462.02 108.99 449.01 C 103.53 439.21 89.46 435.32 81.07 426.93 C 67.92 422.37 49.13 432.62 39.75 419.25 C 31.43 411.26 23.68 402.53 15.00 395.00 C 15.00 432.33 15.00 469.67 15.00 507.00 C 28.21 505.92 41.16 505.99 49.25 517.75 C 58.80 527.06 73.54 523.51 86.00 525.00"},
  { id: 'r43', number: 4, d: "M 362.00 406.00 C 346.08 406.66 330.93 404.29 315.00 405.00 C 302.23 406.11 296.00 423.98 281.00 419.00 C 267.69 420.08 251.81 416.50 244.75 430.75 C 232.58 440.53 242.80 459.03 238.00 472.00 C 252.51 471.74 268.10 469.60 277.92 482.08 C 287.99 493.80 304.29 488.85 318.00 491.00 C 331.96 492.82 346.93 491.18 353.00 477.00 C 370.33 477.00 387.67 477.00 405.00 477.00 C 404.36 464.99 403.01 453.19 402.97 441.03 C 396.80 433.67 381.87 438.50 373.70 432.30 C 361.39 428.61 360.59 417.55 362.00 406.00"},
  { id: 'r44', number: 2, d: "M 237.00 436.00 C 226.51 423.68 211.06 424.32 196.00 424.00 C 179.08 424.62 161.51 422.72 145.00 425.00 C 131.56 425.18 123.31 438.77 112.78 445.78 C 106.99 458.81 116.57 479.00 102.75 487.75 C 88.42 495.94 89.05 511.28 89.00 526.00 C 95.74 529.42 100.31 537.05 107.00 541.00 C 111.11 534.82 119.00 530.70 122.00 524.00 C 136.00 524.00 150.00 524.00 164.00 524.00 C 182.02 528.21 168.58 503.43 178.25 497.25 C 185.48 490.30 193.02 483.88 200.75 477.75 C 208.85 466.85 224.37 474.08 236.00 472.00 C 236.64 460.08 234.70 447.50 237.00 436.00"},
  { id: 'r45', number: 3, d: "M 989.00 438.00 C 976.09 437.35 963.71 438.89 951.00 439.00 C 939.41 439.66 926.40 437.74 916.25 442.25 C 909.30 448.20 902.86 454.76 896.07 461.07 C 884.55 462.58 872.64 462.90 861.00 464.00 C 860.19 476.81 858.19 489.31 857.00 502.00 C 847.51 507.89 839.05 515.31 830.00 522.00 C 836.13 526.05 842.81 530.69 850.00 533.00 C 861.38 519.60 874.68 506.97 894.00 512.00 C 935.80 511.23 978.64 514.48 1019.00 508.00 C 1019.35 497.91 1020.65 488.07 1021.00 478.00 C 1007.15 467.91 985.46 459.12 989.00 438.00"},
  { id: 'r46', number: 5, d: "M 858.00 464.00 C 847.13 458.29 841.19 441.16 826.00 446.00 C 793.23 446.59 761.07 443.89 728.25 445.25 C 719.29 452.70 712.28 464.34 702.00 469.00 C 685.67 469.00 669.33 469.00 653.00 469.00 C 651.71 483.60 652.01 498.59 650.00 513.00 C 646.03 526.93 659.30 533.86 667.30 542.70 C 681.02 549.86 674.05 567.67 677.00 580.00 C 692.21 579.78 708.19 582.03 721.32 574.32 C 740.95 574.58 725.52 548.79 737.25 541.25 C 746.86 534.19 755.00 522.71 767.00 521.00 C 783.33 521.00 799.67 521.00 816.00 521.00 C 830.23 523.92 838.31 510.59 848.92 503.92 C 860.43 495.70 855.33 477.10 858.00 464.00", y: 500, x: 741},
  { id: 'r47', number: 6, d: "M 651.00 467.00 C 644.32 462.82 639.12 454.77 631.00 454.00 C 620.14 454.45 609.60 453.57 599.00 453.00 C 583.51 448.42 588.71 465.71 588.00 475.00 C 586.73 485.03 590.58 497.52 586.00 506.00 C 575.00 506.00 564.00 506.00 553.00 506.00 C 553.42 516.20 551.27 525.70 551.97 535.97 C 546.70 543.12 533.32 536.86 525.00 538.00 C 511.28 541.47 503.37 557.80 491.00 565.00 C 490.32 571.67 490.58 578.57 489.00 585.00 C 501.81 587.31 515.75 585.35 529.00 586.00 C 541.07 588.04 556.58 581.63 566.25 589.75 C 572.94 601.29 585.48 599.24 596.99 599.01 C 609.88 601.11 623.71 599.49 637.00 600.00 C 648.90 603.92 656.92 596.50 665.25 589.25 C 677.63 583.61 673.67 569.79 673.00 559.00 C 675.20 547.36 661.79 542.87 655.75 535.25 C 643.28 528.30 648.73 515.63 648.02 504.02 C 650.12 491.97 648.77 479.02 651.00 467.00", y: 550, x: 604},
  { id: 'r48', number: 3, d: "M 286.00 491.00 C 276.42 485.91 269.24 474.61 258.00 474.00 C 243.91 475.35 229.42 475.00 215.00 475.00 C 203.20 473.66 196.87 486.02 188.08 492.08 C 175.39 497.98 176.13 511.78 176.00 524.00 C 196.38 526.35 185.43 553.56 189.00 568.00 C 185.82 584.40 198.23 593.93 208.00 605.00 C 220.75 603.45 233.93 603.35 247.00 603.00 C 247.10 588.42 245.60 572.86 258.22 563.22 C 259.35 547.37 259.99 531.27 260.08 515.08 C 266.12 505.00 278.11 499.48 286.00 491.00"},
  { id: 'r49', number: 4, d: "M 404.00 479.00 C 389.00 479.00 374.00 479.00 359.00 479.00 C 348.59 481.39 344.19 499.36 330.02 493.98 C 316.48 492.27 301.32 492.60 287.75 493.75 C 279.21 499.67 271.78 507.78 263.00 513.00 C 262.06 529.27 262.33 545.84 261.00 562.00 C 275.33 562.00 289.67 562.00 304.00 562.00 C 315.17 560.76 320.03 574.09 328.33 579.67 C 340.56 580.63 354.42 582.51 360.75 569.75 C 371.10 561.73 366.62 547.26 369.00 536.00 C 377.94 529.93 385.99 522.44 394.30 515.30 C 406.90 508.19 401.61 491.13 404.00 479.00"},
  { id: 'r50', number: 1, d: "M 1106.00 588.00 C 1106.00 573.00 1106.00 558.00 1106.00 543.00 C 1105.49 530.47 1109.91 514.42 1095.75 508.25 C 1088.01 501.25 1080.35 494.16 1072.25 487.75 C 1063.87 475.15 1047.72 481.50 1035.00 480.00 C 1014.92 474.84 1026.80 500.46 1020.07 510.07 C 1007.48 513.36 993.83 512.64 981.00 515.00 C 981.00 533.67 981.00 552.33 981.00 571.00 C 980.51 585.19 998.02 591.34 1007.00 600.00 C 1024.69 598.58 1044.28 602.89 1060.75 597.75 C 1072.05 584.30 1090.05 588.48 1106.00 588.00"},
  { id: 'r51', number: 1, d: "M 70.00 601.00 C 71.05 591.12 66.86 580.80 76.75 574.75 C 82.94 565.80 95.71 569.93 103.02 564.02 C 104.18 554.58 108.74 541.67 97.25 536.75 C 84.61 517.89 56.41 535.69 43.70 516.30 C 36.43 507.20 25.36 510.23 15.00 510.00 C 15.03 557.33 14.46 599.98 15.00 645.00 C 22.33 645.00 29.67 645.00 37.00 645.00 C 37.00 634.67 37.00 624.33 37.00 614.00 C 47.15 607.50 55.94 597.11 70.00 601.00"},
  { id: 'r52', number: 5, d: "M 403.00 512.00 C 396.08 516.89 389.90 522.96 383.25 528.25 C 362.01 537.08 378.22 564.29 359.25 575.25 C 354.45 586.39 341.79 582.39 332.00 583.00 C 334.72 591.71 325.61 607.04 335.00 611.00 C 343.65 612.50 356.69 610.72 356.02 622.98 C 363.15 635.21 377.83 652.94 394.00 648.00 C 413.46 652.23 418.04 620.44 439.00 628.00 C 458.07 635.09 471.14 620.40 485.00 611.00 C 486.02 596.00 487.58 581.14 488.00 566.00 C 467.17 564.30 445.90 564.40 425.00 563.00 C 423.38 551.88 428.38 538.13 422.25 528.75 C 415.90 523.12 408.82 518.07 403.00 512.00"},
  { id: 'r53', number: 2, d: "M 896.00 515.00 C 893.33 515.00 890.67 515.00 888.00 515.00 C 871.80 510.07 859.31 526.09 851.00 537.00 C 849.16 554.17 853.15 573.57 839.00 586.00 C 847.17 589.90 854.45 595.99 862.30 600.70 C 869.83 605.30 877.89 614.42 884.75 603.75 C 891.40 595.12 901.89 597.33 911.00 597.00 C 923.67 597.00 936.33 597.00 949.00 597.00 C 957.97 595.69 964.22 587.47 971.92 582.92 C 983.54 577.64 975.73 561.31 978.00 551.00 C 978.64 539.08 976.70 526.50 979.00 515.00 C 950.90 515.93 922.99 513.53 896.00 515.00"},
  { id: 'r54', number: 4, d: "M 848.00 535.00 C 836.42 531.96 827.99 519.19 814.22 523.22 C 799.95 525.04 784.66 523.48 770.00 524.00 C 757.88 522.70 751.00 534.99 741.75 540.75 C 728.31 546.72 740.57 568.01 730.22 574.22 C 718.27 579.09 706.05 583.03 692.67 582.67 C 679.23 579.98 669.98 587.63 660.75 595.75 C 646.09 602.84 664.25 611.38 668.75 619.25 C 679.45 624.70 695.63 622.30 706.25 617.25 C 716.03 609.35 727.18 604.52 740.00 605.00 C 753.26 605.49 766.89 606.87 775.75 595.75 C 783.80 585.15 796.16 584.94 808.00 585.00 C 820.74 583.91 837.30 589.82 843.25 575.25 C 850.60 564.07 846.25 548.24 848.00 535.00"},
  { id: 'r55', number: 1, d: "M 187.00 584.00 C 186.85 569.53 186.49 555.12 185.00 541.00 C 189.78 522.99 166.97 525.14 155.67 526.67 C 143.18 529.74 125.55 520.95 117.75 533.75 C 105.77 541.22 106.49 554.66 106.00 567.00 C 96.10 570.79 83.61 568.87 76.75 578.75 C 69.92 585.81 69.98 606.30 83.00 602.00 C 96.67 602.00 110.33 602.00 124.00 602.00 C 135.59 604.22 140.25 590.03 149.93 586.93 C 162.14 585.50 174.54 584.52 187.00 584.00"},
  { id: 'r56', number: 2, d: "M 308.00 565.00 C 305.67 565.00 303.33 565.00 301.00 565.00 C 289.67 565.00 278.33 565.00 267.00 565.00 C 258.09 563.49 250.39 573.82 250.93 581.93 C 247.33 589.60 254.81 608.44 241.00 606.00 C 230.06 605.24 219.82 607.30 209.00 607.00 C 206.27 619.01 213.46 636.44 200.25 643.25 C 186.85 650.74 192.76 664.58 192.00 677.00 C 214.38 675.65 241.63 686.59 259.30 669.30 C 272.62 665.77 265.64 650.40 270.25 641.25 C 285.49 629.92 295.79 607.47 317.00 610.00 C 335.20 615.09 327.48 593.57 329.00 583.00 C 320.89 579.25 316.13 568.78 308.00 565.00"},
  { id: 'r57', number: 2, d: "M 918.00 667.00 C 921.83 667.63 926.99 665.72 930.00 668.00 C 944.67 668.00 959.33 668.00 974.00 668.00 C 987.10 671.13 996.31 662.93 1005.22 655.22 C 1007.04 641.62 1005.48 627.00 1006.00 613.00 C 1009.22 599.91 994.28 595.74 987.25 587.75 C 979.31 575.99 969.63 588.97 961.75 593.75 C 952.11 604.08 936.87 598.72 924.00 600.00 C 911.61 601.85 895.84 595.21 886.75 605.75 C 873.89 611.43 877.25 626.11 874.33 637.33 C 875.37 649.88 860.70 652.54 854.00 660.00 C 863.37 663.70 871.38 678.65 881.25 675.25 C 890.43 664.24 904.89 667.17 918.00 667.00"},
  { id: 'r58', number: 2, d: "M 187.00 586.00 C 172.84 590.38 154.33 583.61 143.08 595.08 C 133.15 609.40 115.22 604.20 100.00 605.00 C 84.27 605.94 66.18 600.19 51.75 606.75 C 35.80 612.85 38.76 633.28 41.75 646.25 C 52.24 653.17 59.90 667.14 73.00 668.00 C 88.37 668.63 105.59 664.42 117.00 676.00 C 124.75 667.19 134.33 659.99 142.75 651.75 C 157.16 647.53 174.33 651.48 189.75 649.75 C 201.33 641.37 208.76 630.97 206.00 616.00 C 208.56 602.34 193.85 595.81 187.00 586.00"},
  { id: 'r59', number: 3, d: "M 871.00 645.00 C 869.97 633.47 878.73 619.59 872.08 609.92 C 863.52 604.63 854.93 599.22 846.70 593.31 C 837.40 584.66 826.80 588.38 815.00 588.00 C 802.94 588.86 788.53 584.34 780.25 595.25 C 765.16 617.60 735.04 600.09 716.08 614.08 C 705.14 619.06 695.96 626.03 700.03 639.97 C 705.89 647.29 716.85 651.34 724.78 657.22 C 763.57 659.67 802.62 657.19 843.00 658.00 C 854.98 660.80 861.26 648.51 871.00 645.00"},
  { id: 'r60', number: 4, d: "M 463.00 630.00 C 464.16 640.40 460.53 653.24 467.75 661.25 C 481.36 680.96 506.39 672.21 527.00 674.00 C 537.87 675.78 546.95 672.95 554.25 665.25 C 563.81 658.76 556.91 644.15 559.00 634.00 C 559.28 623.72 556.19 611.82 566.75 605.75 C 579.01 600.11 565.66 594.31 560.67 588.33 C 536.93 587.56 512.86 588.22 489.00 588.00 C 487.04 596.95 492.05 610.37 482.25 615.25 C 476.06 620.49 469.79 626.05 463.00 630.00"},
  { id: 'r61', number: 1, d: "M 1106.00 590.00 C 1090.36 592.02 1072.15 587.04 1061.08 601.08 C 1044.65 605.49 1025.50 601.77 1008.00 603.00 C 1007.29 615.93 1009.07 628.24 1009.00 641.00 C 1012.28 653.27 1005.04 661.01 995.25 666.25 C 984.45 672.74 992.64 687.76 991.00 698.00 C 1003.55 700.98 1019.14 694.94 1029.77 703.23 C 1039.55 711.99 1051.83 713.32 1065.00 712.00 C 1079.13 712.00 1092.04 712.22 1106.00 712.00 C 1106.00 671.33 1106.00 630.67 1106.00 590.00"},
  { id: 'r62', number: 4, d: "M 698.00 624.00 C 685.65 622.37 669.07 629.28 662.25 615.75 C 654.70 605.02 645.39 600.27 632.00 603.00 C 617.46 603.48 603.61 601.23 589.00 602.00 C 577.13 598.87 564.76 606.81 562.00 618.00 C 562.02 632.32 561.96 646.65 562.03 660.97 C 568.19 668.18 577.20 676.79 586.00 681.00 C 597.57 679.88 612.88 688.69 621.25 677.25 C 629.39 670.90 636.41 662.33 645.00 657.00 C 658.10 655.31 673.90 660.47 685.25 654.25 C 695.55 646.78 700.78 636.89 698.00 624.00"},
  { id: 'r63', number: 3, d: "M 352.00 616.00 C 338.02 613.51 323.75 612.40 309.00 613.00 C 297.75 613.31 292.04 626.91 283.25 632.25 C 272.01 639.81 268.85 651.14 270.00 664.00 C 281.00 664.00 292.00 664.00 303.00 664.00 C 302.57 675.06 302.55 686.23 301.00 697.00 C 297.74 707.93 308.53 711.93 314.75 718.25 C 325.53 723.07 321.23 735.44 322.00 745.00 C 333.42 743.76 349.19 749.30 357.75 738.75 C 365.28 731.80 375.32 726.11 381.00 718.00 C 381.72 703.40 379.90 689.43 380.00 675.00 C 379.08 663.08 381.97 648.18 368.75 642.25 C 360.49 635.07 351.33 627.90 352.00 616.00"},
  { id: 'r64', number: 3, d: "M 460.00 631.00 C 448.69 631.05 437.38 630.89 426.08 631.08 C 420.08 635.80 414.81 642.03 408.75 646.75 C 402.31 655.59 389.62 648.08 381.00 652.00 C 383.05 673.71 382.92 696.03 384.00 718.00 C 395.99 720.85 411.18 715.05 421.25 722.75 C 429.31 728.56 436.51 736.20 445.00 741.00 C 448.66 733.51 460.59 731.15 460.00 722.00 C 459.99 711.13 459.54 699.99 461.75 689.75 C 467.29 684.44 474.96 680.05 479.00 674.00 C 472.79 670.34 467.88 664.32 462.33 659.67 C 460.72 650.30 460.78 640.55 460.00 631.00"},
  { id: 'r65', number: 2, d: "M 700.00 644.00 C 691.38 649.85 685.50 663.59 672.00 659.00 C 659.66 659.69 645.39 656.50 636.75 666.75 C 630.63 674.83 618.39 679.41 616.01 688.99 C 618.53 700.47 613.58 715.30 626.30 721.70 C 638.41 726.81 639.75 739.40 640.00 751.00 C 661.63 751.50 684.68 750.28 705.00 751.00 C 710.72 746.17 716.50 739.76 723.00 736.00 C 723.78 725.18 726.08 714.76 727.00 704.00 C 736.16 702.90 745.54 702.85 755.00 703.00 C 756.72 689.26 754.90 674.64 757.00 661.00 C 745.51 659.83 732.59 663.48 722.08 658.92 C 714.94 653.77 706.68 649.56 700.00 644.00", x: 693, y: 709},
  { id: 'r66', number: 1, d: "M 115.00 678.00 C 106.51 669.87 94.64 669.87 83.00 670.00 C 57.19 678.49 49.69 642.42 25.00 648.00 C 8.87 643.55 16.35 662.47 14.99 670.99 C 15.18 711.66 14.02 757.45 15.00 796.00 C 29.83 793.26 49.67 802.50 60.25 789.25 C 69.95 781.38 77.94 771.97 88.00 765.00 C 90.32 749.58 80.21 725.05 100.75 720.75 C 118.65 714.66 111.58 692.95 115.00 678.00", y: 722, x: 39},
  { id: 'r67', number: 1, d: "M 189.00 653.00 C 175.01 653.02 161.02 652.96 147.03 653.03 C 138.38 657.28 132.27 666.61 124.25 672.25 C 113.00 679.36 118.37 693.47 115.00 704.00 C 118.30 717.60 104.29 721.13 95.25 726.25 C 86.09 734.62 93.29 751.21 91.00 763.00 C 112.00 763.00 133.00 763.00 154.00 763.00 C 170.46 764.44 178.90 746.29 192.00 739.00 C 190.37 710.52 189.60 681.76 189.00 653.00"},
  { id: 'r68', number: 1, d: "M 877.00 680.00 C 867.49 674.58 859.83 665.62 850.00 661.00 C 819.67 661.00 789.33 661.00 759.00 661.00 C 758.91 676.15 758.56 691.23 757.00 706.00 C 748.76 706.96 736.40 703.65 729.00 708.00 C 728.25 717.16 727.12 726.21 725.00 735.00 C 759.93 735.71 794.24 733.95 829.00 734.00 C 844.52 736.23 858.18 732.91 868.75 721.75 C 883.37 714.22 872.12 692.36 877.00 680.00", x: 806, y: 704},
  { id: 'r69', number: 3, d: "M 528.00 677.00 C 525.16 676.41 521.02 678.22 519.00 676.00 C 503.66 678.17 484.38 670.18 473.25 683.25 C 456.88 691.43 464.77 711.16 463.00 726.00 C 478.67 726.00 494.33 726.00 510.00 726.00 C 523.39 726.51 538.54 722.62 547.75 734.25 C 556.04 741.38 564.49 748.09 572.92 755.08 C 581.73 766.05 594.26 767.64 608.00 766.00 C 621.52 770.61 628.58 759.42 638.00 752.00 C 636.61 745.09 636.05 737.97 635.00 731.00 C 628.09 727.70 622.77 721.00 616.26 716.74 C 614.11 707.06 614.32 696.31 614.00 686.00 C 602.95 683.79 590.62 686.28 580.25 681.75 C 574.31 675.14 566.47 670.97 561.00 664.00 C 550.78 670.40 542.14 681.01 528.00 677.00"},
  { id: 'r70', number: 2, d: "M 301.00 667.00 C 288.98 666.32 273.52 662.76 263.08 670.08 C 253.73 675.86 245.07 685.25 233.00 681.00 C 219.06 681.75 205.89 679.43 192.00 680.00 C 193.66 694.09 192.34 708.92 194.00 723.00 C 190.49 736.62 198.42 745.69 208.25 753.75 C 215.79 767.10 229.31 763.40 242.00 763.00 C 256.02 756.83 261.32 773.33 273.00 775.00 C 287.97 774.95 302.95 775.11 317.92 774.92 C 322.75 762.81 318.63 745.93 320.00 732.00 C 319.88 720.55 305.57 715.98 298.78 708.22 C 298.60 695.12 299.29 680.34 301.00 667.00"},
  { id: 'r71', number: 1, d: "M 987.00 670.00 C 969.33 670.00 951.67 670.00 934.00 670.00 C 918.27 672.34 898.94 664.70 886.08 675.08 C 872.04 683.72 882.27 704.98 878.00 719.00 C 871.12 724.16 861.31 728.21 857.00 736.00 C 865.76 741.17 870.53 755.28 882.00 754.00 C 895.95 754.77 909.14 752.53 923.00 753.00 C 930.12 746.80 937.37 736.17 948.00 735.00 C 961.27 733.82 973.84 733.24 987.00 733.00 C 986.87 712.07 989.70 690.75 987.00 670.00"},
  { id: 'r72', number: 1, d: "M 1106.00 715.00 C 1084.79 714.29 1062.79 716.43 1042.08 713.92 C 1027.77 701.01 1009.10 700.05 990.00 701.00 C 990.00 712.33 990.00 723.67 990.00 735.00 C 976.16 736.31 962.23 736.96 948.07 737.07 C 938.23 740.25 931.87 749.82 923.00 755.00 C 930.66 765.86 941.00 773.48 955.00 770.00 C 969.72 768.66 985.09 769.20 999.77 768.23 C 1009.39 774.09 1017.58 782.81 1028.00 787.00 C 1041.56 785.69 1057.98 791.61 1067.25 779.25 C 1075.68 765.61 1092.73 772.70 1106.00 771.00 C 1106.00 752.33 1106.00 733.67 1106.00 715.00", y: 744, x: 1038},
  { id: 'r73', number: 2, d: "M 322.00 750.00 C 323.60 753.93 323.70 761.14 322.00 765.00 C 322.00 765.50 322.03 766.50 322.00 767.00 C 323.96 768.45 322.56 771.80 323.00 774.00 C 322.14 784.34 318.32 799.02 331.75 803.25 C 349.95 822.85 382.85 799.40 401.25 818.75 C 410.05 822.54 417.96 837.68 427.75 829.75 C 437.39 823.22 447.30 816.47 460.00 819.00 C 456.15 806.38 463.87 789.17 455.08 778.92 C 442.78 772.49 441.40 759.73 443.00 747.00 C 440.29 737.31 427.34 733.23 420.70 725.30 C 410.67 717.38 394.05 721.31 382.23 722.23 C 374.09 728.72 366.16 735.41 358.08 742.08 C 349.92 754.02 331.20 743.63 322.00 750.00"},
  { id: 'r74', number: 1, d: "M 582.00 766.00 C 573.34 758.61 564.39 751.65 555.75 744.25 C 546.07 737.12 537.87 725.46 524.00 729.00 C 508.75 729.15 492.57 728.79 478.00 729.00 C 463.96 723.94 455.52 734.11 446.00 742.00 C 446.34 754.29 442.62 768.49 455.25 775.75 C 467.11 783.56 460.16 799.15 462.00 811.00 C 459.92 822.70 474.11 827.67 478.00 837.00 C 489.66 836.99 501.33 837.01 512.99 836.99 C 521.00 835.13 525.93 826.56 532.25 821.25 C 539.27 813.29 535.03 800.87 537.00 791.00 C 536.92 777.47 556.25 787.33 564.30 783.30 C 570.20 777.92 577.96 772.62 582.00 766.00"},
  { id: 'r75', number: 2, d: "M 872.00 754.00 C 861.83 745.37 853.27 730.29 837.67 736.67 C 803.12 737.17 768.38 736.87 734.00 738.00 C 721.00 736.57 704.53 749.01 707.00 763.00 C 701.55 779.90 723.92 781.75 728.00 794.00 C 728.12 808.29 723.85 829.11 742.00 833.00 C 759.33 833.00 776.67 833.00 794.00 833.00 C 808.14 834.58 814.98 818.43 825.75 811.75 C 832.07 796.05 858.52 809.03 856.07 790.07 C 855.25 775.38 863.69 764.82 872.00 754.00", x: 793, y: 779},
  { id: 'r76', number: 2, d: "M 80.00 849.00 C 92.13 849.40 104.45 853.39 116.25 852.25 C 124.00 846.58 128.90 833.89 140.00 836.00 C 153.33 836.00 166.67 836.00 180.00 836.00 C 192.11 839.38 199.46 830.87 206.75 822.75 C 214.05 814.70 222.58 807.38 219.00 795.00 C 217.20 783.66 224.07 768.40 212.25 761.75 C 205.44 755.25 199.18 748.03 192.00 742.00 C 179.39 750.55 169.54 768.78 152.00 766.00 C 131.32 766.49 110.05 765.01 89.75 766.75 C 78.15 775.88 67.92 787.67 56.00 796.00 C 60.39 803.64 68.65 809.82 75.25 815.75 C 84.71 823.67 77.98 838.13 80.00 849.00", x: 135, y: 801},
  { id: 'r77', number: 1, d: "M 705.00 753.00 C 689.67 753.00 674.33 753.00 659.00 753.00 C 645.38 750.38 634.32 755.30 626.25 766.25 C 614.27 771.90 597.29 768.54 584.00 768.00 C 573.95 783.46 558.20 790.02 540.00 787.00 C 541.77 798.50 532.17 815.13 543.30 822.70 C 553.06 828.44 561.05 838.34 574.00 835.00 C 616.67 835.00 659.33 835.00 702.00 835.00 C 712.04 835.79 725.57 826.81 725.00 816.00 C 725.10 803.62 728.01 789.14 714.25 783.75 C 700.98 778.50 703.71 764.57 705.00 753.00"},
  { id: 'r78', number: 2, d: "M 921.00 756.00 C 908.42 755.32 896.40 756.96 884.00 757.00 C 872.21 753.05 868.78 766.77 861.00 771.00 C 861.08 781.62 858.11 791.45 858.00 802.00 C 847.32 805.50 834.08 802.44 827.23 814.23 C 819.63 820.76 811.60 827.24 805.00 835.00 C 816.41 841.04 824.65 854.55 840.00 850.00 C 855.26 849.43 870.27 850.35 884.77 846.77 C 895.11 841.81 903.50 828.27 915.00 829.00 C 931.58 829.67 947.61 828.07 964.00 828.00 C 977.36 829.38 984.54 814.94 995.25 809.25 C 1003.85 801.37 1013.82 795.12 1022.00 787.00 C 1011.61 782.41 1004.29 770.05 992.00 771.00 C 977.76 772.07 963.23 771.93 949.00 773.00 C 936.14 776.58 927.32 764.99 921.00 756.00"},
  { id: 'r79', number: 1, d: "M 320.00 777.00 C 298.31 774.00 271.45 786.87 255.75 767.25 C 246.05 762.34 233.26 768.01 222.00 766.00 C 220.55 781.31 224.93 798.85 219.75 812.75 C 211.81 820.90 202.94 828.78 197.00 838.00 C 204.39 848.67 217.14 850.20 229.00 847.00 C 243.26 842.68 249.00 853.85 255.00 864.00 C 267.86 861.76 281.73 863.60 295.00 863.00 C 295.00 854.33 295.00 845.67 295.00 837.00 C 314.38 839.48 326.93 823.60 340.00 812.00 C 334.24 808.56 328.89 804.38 323.23 800.77 C 316.40 795.94 321.65 784.55 320.00 777.00"},
  { id: 'r80', number: 1, d: "M 1012.00 893.00 C 1035.67 893.00 1059.33 893.00 1083.00 893.00 C 1091.19 890.43 1108.00 898.72 1106.00 885.00 C 1106.00 849.67 1106.00 814.34 1106.00 779.00 C 1105.18 767.26 1085.12 774.75 1076.75 773.75 C 1070.77 779.55 1064.88 785.95 1058.00 790.00 C 1046.73 789.43 1034.85 791.20 1024.00 789.00 C 1008.26 802.31 991.77 816.15 975.00 828.00 C 978.64 834.92 984.95 840.67 990.22 846.78 C 985.16 867.27 1014.30 873.54 1012.00 893.00", x: 1051, y: 842},
  { id: 'r81', number: 1, d: "M 14.00 805.00 C 16.03 806.77 14.53 810.48 15.00 813.00 C 15.73 818.91 12.75 823.49 15.00 829.00 C 14.44 831.52 16.19 835.30 14.00 837.00 C 13.84 848.05 14.41 858.31 14.00 869.00 C 16.53 877.18 8.10 895.70 20.00 896.00 C 75.00 896.00 130.00 896.00 185.00 896.00 C 188.53 883.69 179.57 877.80 171.75 870.25 C 160.25 863.54 164.81 850.05 164.00 839.00 C 153.84 839.80 142.94 836.57 133.75 838.75 C 128.00 843.94 123.12 850.56 116.74 854.74 C 107.82 856.68 97.07 853.23 87.67 852.33 C 74.30 854.76 77.48 840.96 78.00 833.00 C 76.04 831.55 77.44 828.20 77.00 826.00 C 75.58 814.32 61.45 809.30 54.74 800.26 C 42.06 798.49 25.67 797.76 14.00 800.00 C 15.54 801.72 14.20 803.16 14.00 805.00", y: 872, x: 72},
  { id: 'r82', number: 1, d: "M 449.00 895.00 C 448.30 875.66 415.64 869.86 421.00 848.00 C 424.21 836.24 414.85 832.12 407.08 825.92 C 398.52 822.23 392.81 811.48 382.00 814.00 C 369.67 814.01 357.34 813.99 345.01 814.01 C 336.50 816.55 330.53 825.79 323.25 830.25 C 317.11 839.77 305.32 837.04 297.00 841.00 C 297.65 851.56 294.28 864.78 304.92 871.08 C 310.03 877.41 321.49 882.20 321.01 891.99 C 325.70 900.42 342.40 894.38 350.78 895.22 C 381.56 896.23 414.81 894.25 449.00 895.00"},
  { id: 'r83', number: 1, d: "M 458.00 822.00 C 456.12 821.53 453.07 823.06 452.00 821.00 C 441.16 822.71 431.71 829.99 423.00 836.00 C 422.47 848.56 421.86 861.83 433.75 869.25 C 439.94 877.59 453.55 882.93 451.00 895.00 C 490.00 895.00 529.00 895.00 568.00 895.00 C 571.01 880.41 553.86 875.97 546.08 866.92 C 537.15 859.56 527.88 852.67 519.08 844.92 C 508.25 833.66 490.22 841.16 476.00 839.00 C 471.74 833.14 465.45 822.06 458.00 822.00"},
  { id: 'r84', number: 1, d: "M 692.00 837.00 C 688.24 839.22 682.51 837.41 678.00 838.00 C 642.67 838.00 607.33 838.00 572.00 838.00 C 556.71 841.17 548.16 826.68 536.00 821.00 C 530.33 828.28 522.42 833.67 516.00 840.00 C 526.79 847.18 536.61 856.02 546.75 864.25 C 555.19 873.39 573.93 879.30 570.00 894.00 C 614.49 896.86 657.44 893.69 701.00 894.00 C 697.80 883.37 708.03 877.30 706.02 867.02 C 707.37 857.19 707.88 847.14 708.00 837.00 C 702.67 837.00 697.33 837.00 692.00 837.00", x: 621, y: 868},
  { id: 'r85', number: 1, d: "M 850.00 852.00 C 835.81 854.74 820.77 854.13 810.75 842.25 C 800.13 828.91 781.52 837.36 767.00 836.00 C 751.83 836.25 735.73 838.81 726.00 825.00 C 716.15 832.17 706.74 841.16 710.00 855.00 C 711.17 869.05 704.14 880.47 704.00 894.00 C 750.66 893.48 797.98 895.04 844.22 893.22 C 846.84 879.72 848.74 865.88 850.00 852.00"},
  { id: 'r86', number: 1, d: "M 1009.00 893.00 C 1011.68 881.22 999.08 875.75 993.75 867.25 C 983.38 860.62 992.15 845.83 980.25 839.75 C 974.59 826.71 959.33 831.98 948.00 831.00 C 934.71 830.72 921.58 831.51 908.75 832.75 C 900.78 838.45 893.10 844.41 885.07 850.07 C 875.37 854.78 855.47 846.15 852.00 858.00 C 850.48 870.05 849.15 882.13 847.00 894.00 C 900.87 893.14 954.84 892.71 1009.00 893.00"},
  { id: 'r87', number: 1, d: "M 318.00 896.00 C 320.60 884.17 307.33 878.52 300.90 871.10 C 292.32 861.17 276.04 868.02 264.00 866.00 C 248.83 872.04 249.61 850.22 238.00 850.00 C 225.94 847.04 210.75 856.43 201.75 846.25 C 194.16 834.12 178.85 840.59 167.00 839.00 C 167.42 850.12 163.78 863.15 175.25 869.75 C 183.33 876.80 191.25 884.22 188.00 896.00 C 231.33 896.00 274.67 896.00 318.00 896.00", x: 231, y: 879},
  // ... (dodaj pozostałe regiony, jeśli ich brakuje)
];

// Całkowita liczba regionów (liczba obiektów w REGION_DATA)
const ALL_REGIONS_COUNT = REGION_DATA.length; 

// Dodajemy typ React.FC
const AllianceMapManager: React.FC = () => {
  const svgRef = useRef<SVGSVGElement>(null);
  // === TYPOWANIE STANÓW ===
  const [alliances, setAlliances] = useState<Alliance[]>([
    { id: 1, name: 'KNS', color: '#e67e22' },
    { id: 2, name: 'B&B', color: '#1abc9c' },
    { id: 3, name: 'RBRN', color: '#2ecc71' },
    { id: 4, name: 'KiSS', color: '#3498db' },
    { id: 5, name: 'Kiss', color: '#546e7a' },
    { id: 6, name: 'FSNS', color: '#9b59b6' },
    { id: 7, name: 'FSNT', color: '#e91e63' },
    { id: 8, name: 'FOX', color: '#a84300' },
    { id: 9, name: 'TuSQ', color: '#992d22' },
    { id: 10, name: 'CHF', color: '#11806a' },
    { id: 11, name: 'GaRD', color: '#3d5879' }
  ]);
  const [activeAllianceId, setActiveAllianceId] = useState<number>(1);
  const [regionColors, setRegionColors] = useState<Record<string, number>>({});
  const [hoveredRegion, setHoveredRegion] = useState<string | null>(null);
  const [isSidebarOpen, setIsSidebarOpen] = useState<boolean>(false);
  const [isEditingCenters, setIsEditingCenters] = useState<boolean>(false);
  const [manualCenterOverrides, setManualCenterOverrides] = useState<Record<string, RegionCenter>>({});
  const [regionCenters, setRegionCenters] = useState<Record<string, RegionCenter>>({});
  
  // Ref dla elementu SVG
  // const svgRef = useRef<SVGSVGElement>(null);


  /*// === FUNKCJA ZAPISU DO FIRESTORE (z debouncingiem) ===
  const saveMapData = async (data: Omit<MapData, 'updatedAt'>) => {
    try {
        const docRef = doc(db, "maps", MAP_DOCUMENT_ID);
        // Zapisz dane i timestamp serwera
        await setDoc(docRef, { 
            ...data, 
            updatedAt: serverTimestamp() 
        }, { merge: true }); 
        
        // Zapis do sessionStorage pozostawiamy jako backup/cache
        sessionStorage.setItem('allianceMapData', JSON.stringify(data)); 
        
    } catch (error) {
        console.error("Błąd zapisu danych mapy do Firestore:", error);
    }
  };*/

  
  // --- FUNKCJE ZARZĄDZANIA DANYMI ---
  
  // --- A. Funkcje Sojuszy ---
  const addAlliance = () => {
    const newId = (alliances.length > 0 ? Math.max(...alliances.map(a => a.id)) : 0) + 1;
    const defaultColor = `#${Math.floor(Math.random()*16777215).toString(16).padStart(6, '0')}`;
    setAlliances(prev => [...prev, { id: newId, name: `Sojusz ${newId}`, color: defaultColor }]);
    setActiveAllianceId(newId);
  };
  
  const updateAlliance = (id: number, field: 'name' | 'color', value: string) => {
    setAlliances(prev => prev.map(a => 
      a.id === id ? { ...a, [field]: value } : a
    ));
  };
  
  const removeAlliance = (id: number) => {
    // Usuń sojusz
    setAlliances(prev => prev.filter(a => a.id !== id));
    
    // Zwolnij regiony
    setRegionColors(prev => {
      const newColors = { ...prev };
      Object.keys(newColors).forEach(regionId => {
        if (newColors[regionId] === id) {
          delete newColors[regionId];
        }
      });
      return newColors;
    });
    
    // Zmień aktywny sojusz
    setActiveAllianceId(1); 
  };
  
  // --- B. Funkcje Statystyczne ---
  const getTotalRegions = (): number => {
    return Object.keys(regionColors).length;
  };
  
  const getRegionCount = (allianceId: number): number => {
    return Object.values(regionColors).filter(id => id === allianceId).length;
  };

  const resetMap = () => {
    setRegionColors({});
    // setManualCenterOverrides({}); // Resetowanie ręcznych pozycji numerów
    // Nie resetujemy sojuszy, tylko regiony
  };
  
  const exportMapToPNG = async () => {
    const svgElement = svgRef.current;
    
    if (!svgElement) {
        console.error("Brak referencji do elementu SVG.");
        return;
    }
    
    // Ustaw widok SVG, aby wykluczyć potencjalne style CSS wpływające na rozmiar
    // Używamy viewBox do określenia rozmiaru eksportowanego obrazu
    const { width, height } = svgElement.viewBox.baseVal; 
    
    try {
        // Krok 1: Serializuj SVG do XML (string)
        const svgString = new XMLSerializer().serializeToString(svgElement);
        
        // Krok 2: Konwersja SVG XML na URL z zakodowanym obrazem (Data URL)
        // Wymaga to zakodowania w Base64 i użycia odpowiedniego MIME type
        //const svgDataUrl = `data:image/svg+xml;base64,${btoa(svgString)}`;

        // Krok 3: Utwórz tymczasowy element Canvas
        const canvas = document.createElement('canvas');
        canvas.width = width;
        canvas.height = height;
        const ctx = canvas.getContext('2d');

        if (!ctx) {
             alert("Błąd: Nie udało się uzyskać kontekstu Canvas.");
             return;
        }

        // Krok 4: Narysuj obraz SVG na Canvas
        const img = new Image();
        
        // Upewnij się, że używasz obiektu Blob zamiast bezpośredniego Data URL
        // w celu uniknięcia problemów z CORS/Security
        const blob = new Blob([svgString], { type: 'image/svg+xml' });
        img.src = URL.createObjectURL(blob);

        await new Promise<void>((resolve) => {
            img.onload = () => {
                // Ustaw tło na białe (lub czarne, jeśli jest to cel)
                ctx.fillStyle = '#000000'; // Jak w CSS mapy
                ctx.fillRect(0, 0, width, height);

                // Rysuj SVG
                ctx.drawImage(img, 0, 0, width, height);
                URL.revokeObjectURL(img.src);
                resolve();
            };
            img.onerror = (e) => {
                console.error("Błąd ładowania obrazu SVG:", e);
                alert("Błąd podczas konwersji SVG na PNG.");
                URL.revokeObjectURL(img.src);
                resolve(); // Rozwiąż, aby uniknąć zawieszenia, nawet w przypadku błędu
            };
        });

        // Krok 5: Konwersja Canvas na PNG i pobieranie
        const dataUrlPNG = canvas.toDataURL('image/png');

        const link = document.createElement('a');
        const dateString = new Date().toISOString().slice(0, 10);
        link.download = `mapa_sojuszy_${dateString}.png`;
        link.href = dataUrlPNG;
        link.click();
        
        console.log("Mapa została wyeksportowana jako PNG.");
        
    } catch (error) {
        console.error("Błąd podczas eksportowania mapy:", error);
        alert("Wystąpił nieznany błąd podczas eksportowania mapy. Sprawdź konsolę.");
    }
};


  // --- FUNKCJA 1: Obliczanie domyślnych centrów (BBox lub stałe REGION_DATA) ---
  const calculateDefaultCenters = useCallback((): Record<string, RegionCenter> => {
    if (!svgRef.current) return {};
    const defaults: Record<string, RegionCenter> = {};

    REGION_DATA.forEach(region => {
      // 1. Hardcoded X/Y z REGION_DATA mają priorytet nad BBox
      if (typeof region.x === 'number' && typeof region.y === 'number') {
        defaults[region.id] = { x: region.x, y: region.y };
        return;
      }
      
      // 2. Automatyczne obliczenie środka (bounding box center)
      const path = svgRef.current!.querySelector(`path[data-region="${region.id}"]`) as SVGPathElement | null;
      if (path) {
        try {
          const bbox = path.getBBox();
          defaults[region.id] = {
            x: bbox.x + bbox.width / 2,
            y: bbox.y + bbox.height / 2
          };
        } catch (e) {
          console.error(`Błąd BBox dla regionu ${region.id}:`, e);
          defaults[region.id] = { x: 0, y: 0 }; 
        }
      }
    });
    return defaults;
  }, []);

  // === WCZYTANIE DANYCH Z localStorage przy starcie aplikacji ===
  useEffect(() => {
    try {
      const saved = localStorage.getItem('allianceMapData');
      if (saved) {
        const data = JSON.parse(saved);
        setAlliances(data.alliances || alliances);
        setRegionColors(data.regionColors || {});
        setManualCenterOverrides(data.manualCenterOverrides || {});
        setActiveAllianceId(data.activeAllianceId || 1);
        console.log("✅ Wczytano mapę z localStorage");
      }
    } catch (error) {
      console.error("❌ Błąd wczytywania danych:", error);
    }
  }, []);

  // === AUTOMATYCZNY ZAPIS DO localStorage (z debouncing) ===
  useEffect(() => {
    const dataToSave = {
      alliances,
      regionColors,
      activeAllianceId,
      manualCenterOverrides
    };

    const handler = setTimeout(() => {
      try {
        localStorage.setItem('allianceMapData', JSON.stringify(dataToSave));
        console.log("💾 Zapisano zmiany do localStorage");
      } catch (error) {
        console.error("❌ Błąd zapisu danych:", error);
      }
    }, 500);

    return () => clearTimeout(handler);
  }, [alliances, regionColors, activeAllianceId, manualCenterOverrides]);

  // --- FUNKCJA 3: Użyj defaultów i nadpisz je ręcznymi zmianami (Merge Logic) ---
  useEffect(() => {
    const updateCenters = () => {
        const defaults = calculateDefaultCenters();
        const mergedCenters: Record<string, RegionCenter> = {
            ...defaults,
            ...manualCenterOverrides 
        };
        setRegionCenters(mergedCenters);
    };
    
    updateCenters();
    
    window.addEventListener('resize', updateCenters);
    return () => window.removeEventListener('resize', updateCenters);
  }, [calculateDefaultCenters, manualCenterOverrides]);


  // --- Funkcja do edycji współrzędnych w trybie edycji (dla dewelopera) ---
  const handleMapClickInEditMode = (e: React.MouseEvent<SVGSVGElement>) => {
    if (!isEditingCenters) return;
    
    const svg = svgRef.current;
    if (!svg) return; 
    
    const pt = svg.createSVGPoint();
    pt.x = e.clientX;
    pt.y = e.clientY;
    
    const svgPoint = pt.matrixTransform(svg.getScreenCTM()!.inverse());
    const roundedX = Math.round(svgPoint.x);
    const roundedY = Math.round(svgPoint.y);

    if (hoveredRegion) {
      setManualCenterOverrides(prev => ({
          ...prev,
          [hoveredRegion]: { x: roundedX, y: roundedY }
      }));
      
      if (DEBUG_MODE_ENABLED) {
        console.log(`Region ${hoveredRegion} - NOWE NADPISANE WSPÓŁRZĘDNE (zapisane): { x: ${roundedX}, y: ${roundedY} }`);
      }
    } else {
       if (DEBUG_MODE_ENABLED) {
         console.log(`Kliknięto na mapie: X: ${roundedX}, Y: ${roundedY}`);
       }
    }
  };


  // --- Efekt stylujący ścieżki ---
  useEffect(() => {
    if (!svgRef.current) return;
    
    REGION_DATA.forEach(region => {
      const path = svgRef.current!.querySelector(`path[data-region="${region.id}"]`) as SVGPathElement | null;
      if (!path) return;
      
      const regionId = region.id;
      const allianceId = regionColors[regionId];
      
      if (allianceId) {
        const alliance = alliances.find(a => a.id === allianceId);
        if (alliance) {
          path.style.fill = alliance.color;
          path.style.fillOpacity = '0.7';
        }
      } else {
        path.style.fill = '#d1d5db';
        path.style.fillOpacity = '0.5';
      }
      
      if (hoveredRegion === regionId) {
        path.style.stroke = '#ffffff';
        path.style.strokeWidth = '2';
        path.style.filter = 'drop-shadow(0 0 6px rgba(255,255,255,0.9))';
      } else {
        path.style.stroke = '#2F2E31';
        path.style.strokeWidth = '0.3';
        path.style.filter = 'none';
      }
    });
  }, [regionColors, alliances, hoveredRegion]);

  // --- Handlery ---
  const handlePathClick = (e: React.MouseEvent<SVGPathElement>) => {
    if (isEditingCenters) {
        return;
    }
    const targetElement = e.target as SVGElement;
    const regionId = targetElement.getAttribute('data-region');
    
    if (!regionId) return;

    // Jeśli region już należy do aktywnego sojuszu, usuń go
    if (regionColors[regionId] === activeAllianceId) {
      setRegionColors(prev => {
        const newColors = {...prev};
        delete newColors[regionId];
        return newColors;
      });
      return;
    }
    
    // Sprawdź ile terytoriów ma aktualnie aktywny sojusz
    const currentCount = Object.values(regionColors).filter(id => id === activeAllianceId).length;
    
    // Limit 8 terytoriów na sojusz
    if (currentCount >= 8) {
      alert(`❌ Alliance ${alliances.find(a => a.id === activeAllianceId)?.name} reached its maximum limit of 8 territories!`);
      return; // Nie rób nic więcej
    }
    
    // Przypisz terytorium do aktywnego sojuszu
    setRegionColors(prev => ({
      ...prev,
      [regionId]: activeAllianceId
    }));
  };

  const handlePathHover = (e: React.MouseEvent<SVGPathElement>) => {
    const targetElement = e.target as SVGElement;
    const regionId = targetElement.getAttribute('data-region');
    
    if (regionId) {
      setHoveredRegion(regionId);
      (e.target as SVGPathElement).style.cursor = isEditingCenters ? 'crosshair' : 'pointer';
    }
  };

  const handlePathLeave = () => {
    setHoveredRegion(null);
  };

  
  
  return (
    <div className="flex h-screen bg-gray-900 text-gray-100 relative">
      {/* Przycisk Menu - Pozycja stała */}
      <button
        onClick={() => setIsSidebarOpen(!isSidebarOpen)}
        className="fixed top-4 right-4 z-50 p-3 bg-blue-600 hover:bg-blue-700 rounded-lg shadow-lg transition md:hidden"
      >
        {isSidebarOpen ? <X size={24} /> : <Menu size={24} />}
      </button>
      
      <div 
        onClick={() => setIsSidebarOpen(false)}
        className={`fixed inset-0 bg-black bg-opacity-50 z-40 transition-opacity duration-300 md:hidden 
          ${isSidebarOpen ? 'opacity-100 pointer-events-auto' : 'opacity-0 pointer-events-none'}`
        }
      ></div>


      {/* Obszar Mapy - Pełny ekran */}
      <div className="flex-1 flex flex-col bg-gray-800 w-full">
        <div className="p-4 border-b border-gray-700 flex items-center justify-between">
          <div>
            <h2 className="text-xl font-bold">Teritory Map</h2>
            <p className="text-sm text-gray-400">
              {getTotalRegions()} regions assigned
            </p>
            <p className="text-xs text-gray-500 mt-1">
              Created by <span className="text-blue-400 font-semibold">aRczi from #49</span>
              <span className="text-gray-600 mx-1">•</span>
              Discord: <span className="text-purple-400 font-medium">.arczi.</span>
            </p>
          </div>
          <div className="text-sm hidden md:block">
            Aktywny: <span className="text-blue-400 font-semibold">
              {alliances.find(a => a.id === activeAllianceId)?.name}
            </span>
          </div>
        </div>
        
        <div className="flex-1 overflow-auto p-6 flex items-center justify-center bg-gray-850">
          <div className="relative inline-block" style={{ maxWidth: '100%' }}>
            <svg 
              ref={svgRef}
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 1116 910"
              className={`border-2 rounded-lg bg-gray-500 w-full max-h-[75vh] h-auto md:w-[200%] md:relative md:left-1/2 md:-translate-x-1/2 ${isEditingCenters ? 'cursor-crosshair border-red-500' : 'border-gray-100'}`}
              onClick={isEditingCenters ? handleMapClickInEditMode : undefined} 
            >
              {REGION_DATA.map(region => {
                const center = regionCenters[region.id];
                const regionIsHovered = hoveredRegion === region.id;
                
                const centerX = center ? center.x : 0;
                const centerY = center ? center.y : 0;
                
                const isManuallySet = !!manualCenterOverrides[region.id];
                
                return (
                  <React.Fragment key={region.id}>
                    {/* PATH (ŚCIEŻKA MAPY) */}
                    <path 
                      data-region={region.id} 
                      d={region.d} 
                      onClick={handlePathClick} 
                      onMouseEnter={handlePathHover} 
                      onMouseLeave={handlePathLeave} 
                      style={{
                          fill: '#d1d5db', 
                          fillOpacity: 0.5, 
                          stroke: '#2F2E31', 
                          strokeWidth: 0.3, 
                          transition: 'all 0.2s', 
                          cursor: isEditingCenters ? 'crosshair' : 'pointer',
                      }} 
                    />
                    
                    {/* TEXT (CYFERKA) */}
                     {center && (
                      <>
                        <text
                          x={centerX}
                          y={centerY - (regionColors[region.id] ? 8 : 0)}
                          className="pointer-events-none" 
                          style={{
                            fill: isManuallySet ? '#FFD700' : '#FFFFFF', 
                            fontSize: regionIsHovered ? '24px' : '20px', 
                            fontWeight: 'bold',
                            textAnchor: 'middle', 
                            dominantBaseline: 'middle',
                            transition: 'font-size 0.2s, fill 0.2s',
                            filter: regionIsHovered ? 'drop-shadow(0 0 5px rgba(0,0,0,0.8))' : 'none',
                          }}
                        >
                          {region.number}
                        </text>
                        {regionColors[region.id] && (
                          <text
                            x={centerX}
                            y={centerY + 12}
                            className="pointer-events-none"
                            style={{
                              fill: '#FFFFFF',
                              fontSize: regionIsHovered ? '16px' : '14px',
                              fontWeight: '600',
                              textAnchor: 'middle',
                              dominantBaseline: 'middle',
                              transition: 'font-size 0.2s',
                              filter: 'drop-shadow(0 0 3px rgba(0,0,0,0.9))',
                            }}
                          >
                            {alliances.find(a => a.id === regionColors[region.id])?.name || ''}
                          </text>
                        )}
                      </>
                    )}
                    
                    {/* DODATKOWY PUNKT w trybie edycji */}
                    {isEditingCenters && center && (
                         <circle
                            cx={centerX}
                            cy={centerY}
                            r={3}
                            fill={isManuallySet ? '#FFD700' : '#FF0000'}
                            className="pointer-events-none"
                         />
                    )}
                  </React.Fragment>
                );
              })}
              
              {/* CAP marker */}
              <rect x="475" y="415" width="150" height="95" fill="#9ea3ad" stroke="#6b7280" strokeWidth="5"/>
              <text x="550" y="475" textAnchor="middle" fontSize="35" fontWeight="bold" fill="white">CAP</text>
            </svg>
          </div>
        </div>

        <div className="p-3 border-t border-gray-700 bg-gray-850 text-xs text-gray-400">
          <div className="flex gap-4 justify-center flex-wrap">
            <span>💡 Click on territory to assign it to the active alliance</span>
            <span className="hidden md:inline">💡 Click again to remove</span>
            <span className="hidden md:inline">💡 Hover to highlight</span>
            {isEditingCenters && (
                <span className="text-yellow-400 font-bold">⚠️ TRYB EDYCJI: Kliknij mapę, aby ustawić pozycję numeru. Złoty punkt oznacza pozycję zapisaną ręcznie.</span>
            )}
            
          </div>
        </div>
      </div>

      {/* Panel Kontrolny - Boczny pasek */}
      <div className={`
        fixed top-0 right-0 h-full w-full md:w-96 bg-gray-900 border-l border-gray-700
        flex flex-col overflow-hidden z-50 transition-transform duration-300 ease-in-out
        ${isSidebarOpen ? 'translate-x-0' : 'translate-x-full md:translate-x-0'}
      `}>
        <div className="p-6 border-b border-gray-700 flex justify-between items-start">
        <div>
          <h1 className="text-2xl font-bold mb-2">Alliance Map Manager</h1>
          <p className="text-sm text-gray-400">Strategic Map Control</p>
          <p className="text-xs text-gray-500 mt-2">
            © 2025 Created by <span className="text-blue-400 font-semibold">aRczi from #49</span>
          </p>
          <p className="text-xs text-gray-600 mt-1">
            Discord: <span className="text-purple-400 font-medium">.arczi.</span>
          </p>
        </div>

        <button
            onClick={() => setIsSidebarOpen(false)} 
            className="p-2 ml-4 rounded-full text-white hover:bg-gray-700 transition md:hidden" 
            aria-label="Zamknij menu"
        >
            <X size={24} />
        </button>
        </div>
        <div className="flex-1 overflow-auto p-6">
          
          {/* Tryb Edycji (Wyświetlany tylko w DEBUG_MODE) */}
          {DEBUG_MODE_ENABLED && (
            <div className="mb-6 p-4 bg-gray-800 rounded-lg border border-gray-700">
               <h3 className="text-sm font-semibold mb-3 text-gray-300 flex items-center gap-2">
                  <Settings size={16} /> Konfiguracja Mapy (DEBUG)
               </h3>
               <label className="flex items-center space-x-2 cursor-pointer">
                  <input
                      type="checkbox"
                      checked={isEditingCenters}
                      onChange={() => setIsEditingCenters(!isEditingCenters)}
                      className="form-checkbox h-5 w-5 text-red-600 bg-gray-700 border-gray-600 rounded"
                  />
                  <span className={`text-sm font-medium ${isEditingCenters ? 'text-red-400' : 'text-gray-400'}`}>
                      Włącz Tryb Edycji Pozycji Numerów
                  </span>
               </label>
               <p className="text-xs text-gray-500 mt-2">
                   Włącz, aby klikać na mapie i ręcznie ustawiać pozycję numerów. Zmiany są **automatycznie synchronizowane**.
               </p>
               {isEditingCenters && (
                 <button 
                    onClick={() => setManualCenterOverrides({})}
                    className="mt-3 w-full p-2 bg-yellow-600 hover:bg-yellow-700 text-gray-900 rounded transition text-xs font-semibold"
                 >
                    Resetuj Ręcznie Ustawione Pozycje
                 </button>
               )}
            </div>
          )}
          
          {/* Alliances */}
          <div className="mb-6">
            <div className="flex items-center justify-between mb-4">
              <h2 className="text-lg font-semibold">Alliances</h2>
              <button
                onClick={addAlliance}
                className="px-3 py-2 bg-blue-600 hover:bg-blue-700 rounded transition flex items-center gap-1 text-sm"
              >
                <Plus size={16} />
                Add alliance
              </button>
            </div>

            <div className="space-y-3">
              {alliances.map(alliance => (
                <div
                  key={alliance.id}
                  className={`p-4 rounded-lg border-2 transition cursor-pointer ${
                    activeAllianceId === alliance.id
                      ? 'border-blue-500 bg-gray-750 shadow-lg'
                      : 'border-gray-700 bg-gray-800 hover:border-gray-600'
                  }`}
                  onClick={() => setActiveAllianceId(alliance.id)}
                >
                  <div className="flex items-center justify-between mb-3">
                    <input
                      type="text"
                      value={alliance.name}
                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => updateAlliance(alliance.id, 'name', e.target.value)}
                      onClick={(e) => e.stopPropagation()}
                      className="bg-transparent border-none outline-none font-medium flex-1 mr-2 text-white"
                      placeholder="Nazwa sojuszu"
                    />
                    {alliances.length > 1 && (
                      <button
                        onClick={(e) => {
                          e.stopPropagation();
                           if (window.confirm(`Are you sure you want to delete the alliance ${alliance.name}? This will remove all its territories.`)) {
                             removeAlliance(alliance.id);
                          }
                        }}
                        className="p-1 hover:bg-red-600 rounded transition"
                      >
                        <Trash2 size={16} />
                      </button>
                    )}
                  </div>
                  <div className="flex items-center gap-3">
                    <input
                      type="color"
                      value={alliance.color}
                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => updateAlliance(alliance.id, 'color', e.target.value)}
                      onClick={(e) => e.stopPropagation()}
                      className="w-12 h-8 rounded cursor-pointer border border-gray-600"
                    />
                    <div className="flex-1">
                      <div className="text-sm text-gray-300">
                        {getRegionCount(alliance.id)}/8 teritories
                      </div>
                      {getRegionCount(alliance.id) >= 8 && (
                        <div className="text-xs text-green-400 font-semibold mt-1">
                          ✓ LIMIT REACHED
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* Statistics */}
          <div className="mb-6 p-4 bg-gray-800 rounded-lg border border-gray-700">
            <h3 className="text-sm font-semibold mb-3 text-gray-300">Statistics</h3>
            <div className="space-y-2 text-sm">
              <div className="flex justify-between">
                <span className="text-gray-400">All teritories:</span>
                <span className="font-semibold">{ALL_REGIONS_COUNT}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-400">Assigned:</span>
                <span className="font-semibold text-green-400">{getTotalRegions()}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-400">Free:</span>
                <span className="font-semibold text-gray-500">{ALL_REGIONS_COUNT - getTotalRegions()}</span>
              </div>
            </div>
          </div>

          {/* Actions */}
          <div className="space-y-2">
            
            {/* === NOWY PRZYCISK EKSPORTU === */}
            <button
              onClick={exportMapToPNG}
              className="w-full p-3 bg-indigo-600 hover:bg-indigo-700 rounded flex items-center justify-center gap-2 transition font-medium"
            >
              <Download size={18} />
              Export as PNG
            </button>
            {/* ============================== */}
            
            <button
              onClick={() => {
                 if (window.confirm("Are you sure you want to reset the entire map?")) {
                   resetMap();
                 }
              }}
              className="w-full p-3 bg-red-600 hover:bg-red-700 rounded flex items-center justify-center gap-2 transition font-medium"
            >
              <RotateCcw size={18} />
              Map reset
            </button>
          </div>
        </div>

      </div>
    </div>
  );
};

export default AllianceMapManager;